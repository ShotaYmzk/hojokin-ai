/* tslint:disable */
/* eslint-disable */
/**
 * Subsidy Automation API
 * API for the 補助金AI platform. Covers authentication, company profiles, subsidy search & matching, AI‐generated document drafts, application submission, and progress tracking.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import type { CompanyProfile } from "../models/index";
import { CompanyProfileFromJSON, CompanyProfileToJSON } from "../models/index";

export interface CompanyProfilePutRequest {
  companyProfile: CompanyProfile;
}

/**
 *
 */
export class CompanyApi extends runtime.BaseAPI {
  /**
   * Get current company profile
   */
  async companyProfileGetRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<CompanyProfile>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    if (this.configuration && this.configuration.accessToken) {
      const token = this.configuration.accessToken;
      const tokenString = await token("bearerAuth", []);

      if (tokenString) {
        headerParameters["Authorization"] = `Bearer ${tokenString}`;
      }
    }
    const response = await this.request(
      {
        path: `/company/profile`,
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      CompanyProfileFromJSON(jsonValue),
    );
  }

  /**
   * Get current company profile
   */
  async companyProfileGet(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<CompanyProfile> {
    const response = await this.companyProfileGetRaw(initOverrides);
    return await response.value();
  }

  /**
   * Update company profile
   */
  async companyProfilePutRaw(
    requestParameters: CompanyProfilePutRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<CompanyProfile>> {
    if (requestParameters["companyProfile"] == null) {
      throw new runtime.RequiredError(
        "companyProfile",
        'Required parameter "companyProfile" was null or undefined when calling companyProfilePut().',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters["Content-Type"] = "application/json";

    if (this.configuration && this.configuration.accessToken) {
      const token = this.configuration.accessToken;
      const tokenString = await token("bearerAuth", []);

      if (tokenString) {
        headerParameters["Authorization"] = `Bearer ${tokenString}`;
      }
    }
    const response = await this.request(
      {
        path: `/company/profile`,
        method: "PUT",
        headers: headerParameters,
        query: queryParameters,
        body: CompanyProfileToJSON(requestParameters["companyProfile"]),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      CompanyProfileFromJSON(jsonValue),
    );
  }

  /**
   * Update company profile
   */
  async companyProfilePut(
    requestParameters: CompanyProfilePutRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<CompanyProfile> {
    const response = await this.companyProfilePutRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }
}

/* tslint:disable */
/* eslint-disable */
/**
 * Subsidy Automation API
 * API for the 補助金AI platform. Covers authentication, company profiles, subsidy search & matching, AI‐generated document drafts, application submission, and progress tracking.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface Application
 */
export interface Application {
  /**
   *
   * @type {string}
   * @memberof Application
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof Application
   */
  subsidyName: string;
  /**
   *
   * @type {string}
   * @memberof Application
   */
  status: ApplicationStatusEnum;
  /**
   *
   * @type {Date}
   * @memberof Application
   */
  submissionDate?: Date | null;
  /**
   *
   * @type {Date}
   * @memberof Application
   */
  deadline?: Date;
  /**
   *
   * @type {string}
   * @memberof Application
   */
  nextAction?: string;
  /**
   *
   * @type {number}
   * @memberof Application
   */
  progress?: number;
}

/**
 * @export
 */
export const ApplicationStatusEnum = {
  1: "準備中",
  2: "審査中",
  3: "採択",
  4: "不採択",
} as const;
export type ApplicationStatusEnum =
  (typeof ApplicationStatusEnum)[keyof typeof ApplicationStatusEnum];

/**
 * Check if a given object implements the Application interface.
 */
export function instanceOfApplication(value: object): value is Application {
  if (!("id" in value) || value["id"] === undefined) return false;
  if (!("subsidyName" in value) || value["subsidyName"] === undefined)
    return false;
  if (!("status" in value) || value["status"] === undefined) return false;
  return true;
}

export function ApplicationFromJSON(json: any): Application {
  return ApplicationFromJSONTyped(json, false);
}

export function ApplicationFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Application {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"],
    subsidyName: json["subsidyName"],
    status: json["status"],
    submissionDate:
      json["submissionDate"] == null
        ? undefined
        : new Date(json["submissionDate"]),
    deadline: json["deadline"] == null ? undefined : new Date(json["deadline"]),
    nextAction: json["nextAction"] == null ? undefined : json["nextAction"],
    progress: json["progress"] == null ? undefined : json["progress"],
  };
}

export function ApplicationToJSON(json: any): Application {
  return ApplicationToJSONTyped(json, false);
}

export function ApplicationToJSONTyped(
  value?: Application | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value["id"],
    subsidyName: value["subsidyName"],
    status: value["status"],
    submissionDate:
      value["submissionDate"] == null
        ? undefined
        : (value["submissionDate"] as any).toISOString().substring(0, 10),
    deadline:
      value["deadline"] == null
        ? undefined
        : value["deadline"].toISOString().substring(0, 10),
    nextAction: value["nextAction"],
    progress: value["progress"],
  };
}
